<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ian.media.dao.ProductMapper" >
  <resultMap id="BaseResultMap" type="com.ian.media.model.Product" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="color" property="color" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="weight" property="weight" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, color, price, weight
  </sql>
  
  
  <select id="get" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List"/>
        from product
        where 1=1
        <if test="id != null">
            and id=#{id,jdbcType=VARCHAR}
        </if>
     
        order by id desc
        <if test="pageIndex !=null">
            limit #{pageIndex},#{rows}
        </if>
    </select>
    
    <select id="getCount" resultType="int" parameterType="java.util.HashMap">
        select
        count(*)
        from product
        where 1=1
         <if test="id != null">
            and id=#{id,jdbcType=VARCHAR}
        </if>
    </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from product
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from product
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ian.media.model.Product" >
    insert into product (id, name, color, 
      price, weight)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{color,jdbcType=VARCHAR}, 
      #{price,jdbcType=DOUBLE}, #{weight,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ian.media.model.Product" >
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="color != null" >
        color,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="weight != null" >
        weight,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="color != null" >
        #{color,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="weight != null" >
        #{weight,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ian.media.model.Product" >
    update product
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="color != null" >
        color = #{color,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="weight != null" >
        weight = #{weight,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ian.media.model.Product" >
    update product
    set name = #{name,jdbcType=VARCHAR},
      color = #{color,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      weight = #{weight,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  
   <delete id="deleteMoreByPK" parameterType="list" >
    delete from product
    where id in
     <foreach collection="list" index="index" item="item" open="("
    separator="," close=")">
	   #{item}  
	</foreach>
  </delete>
</mapper>